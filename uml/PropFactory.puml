@startuml
'https://plantuml.com/sequence-diagram

abstract class Prop {
    + Prop(int locationX, int locationY, int speedX, int speedY)
    + forward(): void
    + {abstract}}aftercrash(HeroAircraft heroAircraft): void
}

class Prop_blood{
    - blood: int

    + Prop_blood(int locationX, int locationY, int X, int Y, int blood)
    + afercrash(HeroAircraft heroAircraft)):void
}

class Prop_bomb{
    + Prop_bomb(int locationX, int locationY, int X, int Y)
    + afercrash(HeroAircraft heroAircraft)): void
}

class Prop_bullet{
    + Prop_bullet(int locationX, int locationY, int X, int Y)
    + aftercrash(HeroAircraft heroAircraft)): void
}

Prop <|-- Prop_blood
Prop <|-- Prop_bomb
Prop <|-- Prop_bullet

interface PropFactory{
    + {abstract}createProp(int locationX, int locationY, int X, int Y):Prop
}

class PropFactory_blood{
    + createProp(int locationX, int locationY, int X, int Y):Prop
}

class PropFactory_bomb{
    + createProp(int locationX, int locationY, int X, int Y):Prop
}

class PropFactory_bullet{
    + createProp(int locationX, int locationY, int X, int Y):Prop
}

PropFactory <|-- PropFactory_blood
PropFactory <|-- PropFactory_bomb
PropFactory <|-- PropFactory_bullet

PropFactory ..> Prop




@enduml